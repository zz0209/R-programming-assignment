# the following function creates a special object that stores a matrix and caches its inverse

makeCacheMatrix <- function(x = matrix()) {
  p <- NULL
  set <- function(y){
    x <<- y
    p <<- NULL
  }
  get <- function()x
  setSol <- function(Sol) p <<- Sol
  getSol <- function() p 
  list(set = set, get = get, 
       setSol = setSol, 
       getSol = getSol)
}

###############################
#the following computes the inverse of the special matrix returned by makecachematrix

cacheSolve <- function(x, ...) {
  p <- x$getSol()
  if(!is.null(p)){
    message("getting inversed data")
    return(p)
  }
  mat <- x$get()
  p <- solve(mat,...)
  x$setSol(p)
  p
}

## return the inverse of x
